#include <GL/gl.h>
#include <GL/glut.h>
#include <stdio.h>
int x1, x2, z1, z2;


void myInit()
{
    glClear(GL_COLOR_BUFFER_BIT);
    glClearColor(0.0, 0.0, 0.0, 1.0);
    glColor3f(0.0, 1.0, 0.0);
    glMatrixMode(GL_PROJECTION);
    gluOrtho2D(0, 500, 0, 500);
}
void draw_pixel(int x, int y)

{
    glBegin(GL_POINTS);
    glVertex2i(x, y);
    glEnd();
}
void Line(int x1, int z1, int x2, int z2)
{
    int dx, dy, i, e;
    int incx, incy, inc1, inc2;
    int x,y;
    dx = x2-x1;
    dy = z2-z1;
    if (dx < 0) dx = -dx;
    if (dy < 0) dy = -dy;
    incx = 1;
    if (x2 < x1) incx = -1;
    incy = 1;
    if (z2 < z1) incy = -1;
    x = x1;
    y = z1;
    if (dx > dy)
    {
        draw_pixel(x, y);
        e = 2 * dy-dx;
        inc1 = 2*(dy-dx);
        inc2 = 2*dy;
        for (i=0; i<dx; i++)
        {
            if (e >= 0)
            {
                y += incy;
                e += inc1;
            }
            else
                e += inc2;
            x += incx;
            draw_pixel(x, y);
        }
    }

    else
    {
        draw_pixel(x, y);
        e = 2*dx-dy;
        inc1 = 2*(dx-dy);
        inc2 = 2*dx;
        for (i=0; i<dy; i++)
        {
            if (e >= 0)
            {
                x += incx;
                e += inc1;
            }
            else
                e += inc2;
            y += incy;
            draw_pixel(x, y);
        }
    }
}
void draw(void)
{
    glClear(GL_COLOR_BUFFER_BIT);
    Line(300,300,400,300);
    Line(300,320,400,320);
    Line(300,300,300,320);
    Line(400,300,400,320);
    Line(340,200,340,300);
    Line(360,200,360,300);
    Line(340,200,360,200);
    
    Line(10,10,10,180);
    Line(10,180,50,180);
    Line(10,10,150,10);
    Line(50,50,50,180);
    Line(150,10,150,50);
    Line(50,50,150,50);
    glFlush();
}

int main(int argc, char **argv)
{
	
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE|GLUT_RGB);
    glutInitWindowSize(600, 600);
    glutInitWindowPosition(100, 100);
    glutCreateWindow("Bresenham's Line Drawing");
    myInit();
    glutDisplayFunc(draw);
    glutMainLoop();

    return 0;
}
